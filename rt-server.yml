---
#
# OVERVIEW
#
# The World is imperfect, non-ideal. Maybe (problably?) your IT infrastructure is like that
# too. Infra as code can help improve that, but sometimes its tools/practices/users call for
# ideals you or your environment are not ready to meet right now.
#
# Ansible keeps things simple. And it helps you automate the things the way you do it today,
# whether it's a good or bad way. I think Ansible is better at theses than others.
#
# This is an imperfect example of imperfect automation for an imperfect environment. But one
# that you can improve by codifying and automating your infra RIGHT NOW.
#
# **Warning**: this ain't a complete or optimized BestPractical RT installation example. It's
#  purpose is showcasing some ansible features/possibilities.
#
# Interesting things to note in here:
#
# - This playbook is meant to be used interactively. It prompts for some info (vars_propmpt).
#   But you can override that setting the var with --extra_vars
#
# - It sets several variables right upfront. Very readable. They can reference other variables,
#   including the prompted ones.
#
# - I use ready roles I got from ansible galaxy to install mysql and nginx.
# - I then do my own stuff with tasks (not creating a role for that, that's my choice), but
#   break them in other files (includes), mostly for readability/maintenability.
# - One of those includes even contains an attrocious configure/make/make install.
#
# - I use the script module to upload and run some hipothetically useful script I would have
#   ready, so I would not need to invest time right now converting it to an ansible playbook.
#
# - For the RT user password, we generate a random one in the control machine and keep it saved
#   to a file on the remote host, instead of keeping in our code. We then always read that file
#   so we don't generate a new password in every run. THIS IS UGLY AS HELL. If I were to use this
#   approach for real, we could at least make a custom python module to enable a cleaner code.
#   But hey, use ansible vault or some lookup on a remote shared secret vault.
#
#
## Using this vagrant repo, you can try it like this below:
#
# vagrant up
# ansible-playbook --sudo rt-server.yml \
#   -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory
#
#
## Calling it like this bellow will ask only for prompt_mysql_root_password (but you could set
## that too, of course)
#
# ansible-playbook --sudo rt-server.yml \
#   -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory \
#   --extra-vars "prompt_mysql_bind_address=127.0.0.1 prompt_rt_version=4.4.0"
#
- name: Install Best Practical RT
  hosts: all
  vars_prompt:
    - name: "prompt_mysql_root_password"
      prompt: "Enter MySQL root password"
      private: yes
    - name: "prompt_mysql_bind_address"
      prompt: "Enter MySQL bind Address"
      default: "127.0.0.1"
      private: no
    - name: "prompt_rt_version"
      prompt: "Which version to download?"
      default: "4.4.0"
      private: no
  vars:
    rt_source_unpacked_dir: "{{ rt_source_dest }}/rt-{{ prompt_rt_version }}"
    rt_source_pkg: rt-{{ prompt_rt_version }}.tar.gz
    rt_source_url: https://download.bestpractical.com/pub/rt/release/{{ rt_source_pkg }}
    rt_source_dest: /usr/local/src
    rt_install_prefix: /opt/rt4
    rt_webdomain: rt.example.com.br
    rt_webpath: ""
    rt_webport: 8080
    rt_comment_address: rt@{{ rt_webdomain }}
    rt_correspond_address: rt@{{ rt_webdomain }}
    # OBS: quotes are necessary when the variable is used alone like below
    rt_rtname: "{{ rt_webdomain }}"
    rt_dbuser: rt_user
    #rt_dbpass: d183ucZj9rth.98
    rt_dbpass: _RANDOM_GEN_
    rt_dbname: rt4
    rt_fcgi_port: 9000
    rt_generated_password_file: "{{ rt_install_prefix }}/etc/.db_password"
  pre_tasks:
    - name: apt-get update
      tags: apt-get-update
      apt: update_cache=yes
  roles:
    - { role: Rackspace_Automation.mysql,
        mysql_root_password: "{{ prompt_mysql_root_password }}",
        mysql_bind_address: "{{ prompt_mysql_bind_address }}" }
    - { role: geerlingguy.nginx,
        nginx_remove_default_vhost: true}
  tasks:
    - include: rt.yml
    - include: rt-nginx-config.yml
    - name: Run an hypothetical script that we have ready and does something useful
      tags: myscript
      script: files/do-something-about-rt.sh creates=/root/something
  handlers:
    - name: restart rt-fcgi
      service: name=rt-fcgi state=restarted
